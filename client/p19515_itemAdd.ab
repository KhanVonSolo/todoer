&ANALYZE-SUSPEND _VERSION-NUMBER AB_v10r12 GUI
&ANALYZE-RESUME
/* Connected Databases 
          shop1337         PROGRESS
*/
&Scoped-define UIB_is_Running C:\Work10\shop1337\client\p19515_itemAdd.ab
&Scoped-define AB_is_Running {&UIB_is_Running}
&Scoped-define AppBuilder_is_Running {&AB_is_Running}
&Scoped-define NEW            NEW
&Scoped-define WINDOW-NAME C-Win
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS C-Win 
/*------------------------------------------------------------------------

  File: 

  Description: A program for adding Items to the database. Depending on the category selected
    in the first combo box, offers only certain options in the second one. E.g. if you select
    CPU, only AMD and Intel will be available. It also changes the brand availability depending
    on the selected categories. Different brand options are offered for different categories.

  Input Parameters:
      <none>

  Output Parameters:
      <none>

  Author: 

  Created: 

------------------------------------------------------------------------*/
/*          This .W file was created with the Progress AppBuilder.      */
/*----------------------------------------------------------------------*/

/* Create an unnamed pool to store all the widgets created 
     by this procedure. This is a good default which assures
     that this procedure's triggers and internal procedures 
     will execute in this procedure's storage, and that proper
     cleanup will occur on deletion of the procedure. */

CREATE WIDGET-POOL.

/* ***************************  Definitions  ************************** */

/* Parameters Definitions ---                                           */

/* Local Variable Definitions ---                                       */

DEFINE VARIABLE cCat AS CHARACTER   NO-UNDO.
DEFINE VARIABLE cSubCat AS CHARACTER   NO-UNDO.
DEFINE VARIABLE iCatID AS INTEGER     NO-UNDO.
DEFINE VARIABLE iSubCatID AS INTEGER     NO-UNDO.
DEFINE VARIABLE iItemIDCounter AS INTEGER    NO-UNDO.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE Window
&Scoped-define DB-AWARE no

/* Name of designated FRAME-NAME and/or first browse and/or first query */
&Scoped-define FRAME-NAME itemAdd

/* Internal Tables (found by Frame, Query & Browse Queries)             */
&Scoped-define INTERNAL-TABLES shop1337.Item

/* Definitions for FRAME itemAdd                                        */
&Scoped-define FIELDS-IN-QUERY-itemAdd shop1337.Item.ItemName ~
shop1337.Item.Price shop1337.Item.Description 
&Scoped-define ENABLED-FIELDS-IN-QUERY-itemAdd shop1337.Item.ItemName ~
shop1337.Item.Price shop1337.Item.Description 
&Scoped-define ENABLED-TABLES-IN-QUERY-itemAdd shop1337.Item
&Scoped-define FIRST-ENABLED-TABLE-IN-QUERY-itemAdd shop1337.Item
&Scoped-define QUERY-STRING-itemAdd FOR EACH shop1337.Item SHARE-LOCK
&Scoped-define OPEN-QUERY-itemAdd OPEN QUERY itemAdd FOR EACH shop1337.Item SHARE-LOCK.
&Scoped-define TABLES-IN-QUERY-itemAdd shop1337.Item
&Scoped-define FIRST-TABLE-IN-QUERY-itemAdd shop1337.Item


/* Standard List Definitions                                            */
&Scoped-Define ENABLED-FIELDS shop1337.Item.ItemName shop1337.Item.Price ~
shop1337.Item.Description 
&Scoped-define ENABLED-TABLES shop1337.Item
&Scoped-define FIRST-ENABLED-TABLE shop1337.Item
&Scoped-Define ENABLED-OBJECTS cbCat cbSubCat btnAdd BtnDone 
&Scoped-Define DISPLAYED-FIELDS shop1337.Item.ItemName shop1337.Item.Price ~
shop1337.Item.Description 
&Scoped-define DISPLAYED-TABLES shop1337.Item
&Scoped-define FIRST-DISPLAYED-TABLE shop1337.Item
&Scoped-Define DISPLAYED-OBJECTS cbCat cbSubCat 

/* Custom List Definitions                                              */
/* List-1,List-2,List-3,List-4,List-5,List-6                            */

/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME



/* ***********************  Control Definitions  ********************** */

/* Define the widget handle for the window                              */
DEFINE VAR C-Win AS WIDGET-HANDLE NO-UNDO.

/* Definitions of the field level widgets                               */
DEFINE BUTTON btnAdd AUTO-GO DEFAULT 
     LABEL "Add" 
     SIZE 15 BY 1.12
     BGCOLOR 8 .

DEFINE BUTTON BtnDone DEFAULT 
     LABEL "&Done" 
     SIZE 15 BY 1.12
     BGCOLOR 8 .

DEFINE VARIABLE cbCat AS CHARACTER FORMAT "X(256)":U 
     LABEL "Category" 
     VIEW-AS COMBO-BOX INNER-LINES 5
     DROP-DOWN-LIST
     SIZE 16 BY 1 NO-UNDO.

DEFINE VARIABLE cbSubCat AS CHARACTER FORMAT "X(256)":U 
     LABEL "Sub-Category" 
     VIEW-AS COMBO-BOX INNER-LINES 5
     DROP-DOWN-LIST
     SIZE 16 BY 1 NO-UNDO.

/* Query definitions                                                    */
&ANALYZE-SUSPEND
DEFINE QUERY itemAdd FOR 
      shop1337.Item SCROLLING.
&ANALYZE-RESUME

/* ************************  Frame Definitions  *********************** */

DEFINE FRAME itemAdd
     shop1337.Item.ItemName AT ROW 2.73 COL 10.43 COLON-ALIGNED WIDGET-ID 22
          VIEW-AS FILL-IN 
          SIZE 54.14 BY 1
     cbCat AT ROW 4.54 COL 13.57 COLON-ALIGNED WIDGET-ID 4
     cbSubCat AT ROW 5.92 COL 13.57 COLON-ALIGNED WIDGET-ID 6
     shop1337.Item.Price AT ROW 5.92 COL 40.86 COLON-ALIGNED WIDGET-ID 28
          VIEW-AS FILL-IN 
          SIZE 12.86 BY 1
     shop1337.Item.Description AT ROW 11.46 COL 14.72 NO-LABEL WIDGET-ID 36
          VIEW-AS EDITOR SCROLLBAR-VERTICAL
          SIZE 51.43 BY 8.69
     btnAdd AT ROW 22.27 COL 16.72 WIDGET-ID 32
     BtnDone AT ROW 22.31 COL 38.29 WIDGET-ID 34
     "Description" VIEW-AS TEXT
          SIZE 11.14 BY .62 AT ROW 12.31 COL 2.86 WIDGET-ID 38
    WITH 1 DOWN NO-BOX KEEP-TAB-ORDER OVERLAY 
         SIDE-LABELS NO-UNDERLINE THREE-D 
         AT COL 1 ROW 1
         SIZE 76.72 BY 24.08 WIDGET-ID 100.


/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: Window
   Allow: Basic,Browse,DB-Fields,Window,Query
   Other Settings: COMPILE
 */
&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* *************************  Create Window  ************************** */

&ANALYZE-SUSPEND _CREATE-WINDOW
IF SESSION:DISPLAY-TYPE = "GUI":U THEN
  CREATE WINDOW C-Win ASSIGN
         HIDDEN             = YES
         TITLE              = "<insert window title>"
         HEIGHT             = 24.08
         WIDTH              = 76.72
         MAX-HEIGHT         = 38.81
         MAX-WIDTH          = 274.29
         VIRTUAL-HEIGHT     = 38.81
         VIRTUAL-WIDTH      = 274.29
         RESIZE             = yes
         SCROLL-BARS        = no
         STATUS-AREA        = no
         BGCOLOR            = ?
         FGCOLOR            = ?
         KEEP-FRAME-Z-ORDER = yes
         THREE-D            = yes
         MESSAGE-AREA       = no
         SENSITIVE          = yes.
ELSE {&WINDOW-NAME} = CURRENT-WINDOW.
/* END WINDOW DEFINITION                                                */
&ANALYZE-RESUME



/* ***********  Runtime Attributes and AppBuilder Settings  *********** */

&ANALYZE-SUSPEND _RUN-TIME-ATTRIBUTES
/* SETTINGS FOR WINDOW C-Win
  VISIBLE,,RUN-PERSISTENT                                               */
/* SETTINGS FOR FRAME itemAdd
   FRAME-NAME                                                           */
IF SESSION:DISPLAY-TYPE = "GUI":U AND VALID-HANDLE(C-Win)
THEN C-Win:HIDDEN = no.

/* _RUN-TIME-ATTRIBUTES-END */
&ANALYZE-RESUME


/* Setting information for Queries and Browse Widgets fields            */

&ANALYZE-SUSPEND _QUERY-BLOCK FRAME itemAdd
/* Query rebuild information for FRAME itemAdd
     _TblList          = "shop1337.Item"
     _Query            is OPENED
*/  /* FRAME itemAdd */
&ANALYZE-RESUME

 



/* ************************  Control Triggers  ************************ */

&Scoped-define SELF-NAME C-Win
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL C-Win C-Win
ON END-ERROR OF C-Win /* <insert window title> */
OR ENDKEY OF {&WINDOW-NAME} ANYWHERE DO:
  /* This case occurs when the user presses the "Esc" key.
     In a persistently run window, just ignore this.  If we did not, the
     application would exit. */
  IF THIS-PROCEDURE:PERSISTENT THEN RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL C-Win C-Win
ON WINDOW-CLOSE OF C-Win /* <insert window title> */
DO:
  /* This event will close the window and terminate the procedure.  */
  APPLY "CLOSE":U TO THIS-PROCEDURE.
  RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME btnAdd
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL btnAdd C-Win
ON CHOOSE OF btnAdd IN FRAME itemAdd /* Add */
DO:
/*     IF cbCat:SCREEN-VALUE = "CPU" THEN                                                     */
/*         FIND LAST ITEM WHERE ITEM.ItemID >= 1001 AND ITEM.ItemID <= 1999 NO-LOCK NO-ERROR. */
/*         IF AVAILABLE ITEM THEN                                                             */
/*             iItemIDCounter = ITEM.ItemID + 1.                                              */
/*         ELSE                                                                               */
/*             iItemIDCounter = 1001.                                                         */
/*                                                                                            */
/*     IF cbCat:SCREEN-VALUE = "GPU" THEN                                                     */
/*         FIND LAST ITEM WHERE ITEM.ItemID >= 2001 AND ITEM.ItemID <= 2999 NO-LOCK NO-ERROR. */
/*         IF AVAILABLE ITEM THEN                                                             */
/*             iItemIDCounter = ITEM.ItemID + 1.                                              */
/*         ELSE                                                                               */
/*             iItemIDCounter = 2001.                                                         */

    RUN FindItemID.

    CREATE ITEM.
            
    ASSIGN
      Item.ItemName = ItemName:SCREEN-VALUE
      ITEM.CatName = cbCat:SCREEN-VALUE
      ITEM.SubCatName = cbSubCat:SCREEN-VALUE
      ITEM.Price = DECIMAL(Price:SCREEN-VALUE)
      ITEM.DESCRIPTION = DESCRIPTION:SCREEN-VALUE
      ITEM.ItemID = iItemIDCounter
      ITEM.Created = TODAY.
      

    CLEAR FRAME DEFAULT-FRAME.

    MESSAGE "Item added successfully." VIEW-AS ALERT-BOX.
  
   
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BtnDone
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BtnDone C-Win
ON CHOOSE OF BtnDone IN FRAME itemAdd /* Done */
DO:
  &IF "{&PROCEDURE-TYPE}" EQ "SmartPanel" &THEN
    &IF "{&ADM-VERSION}" EQ "ADM1.1" &THEN
      RUN dispatch IN THIS-PROCEDURE ('exit').
    &ELSE
      RUN exitObject.
    &ENDIF
  &ELSE
      APPLY "CLOSE":U TO THIS-PROCEDURE.
  &ENDIF
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME cbCat
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL cbCat C-Win
ON VALUE-CHANGED OF cbCat IN FRAME itemAdd /* Category */
DO:
    ASSIGN cbCat.
    ASSIGN cSubCat = "".

    FOR EACH Category WHERE Category.CatName = cbCat NO-LOCK:
        ASSIGN iCatID = Category.CatID.
    END.

    FOR EACH SubCategory WHERE SubCategory.CatID = iCatID NO-LOCK:
        ASSIGN cSubCat = cSubCat + SubCategory.SubCatName + ",".
    END.

    cSubCat = cSubCat + "Undefined".

    ASSIGN cbSubCat:LIST-ITEMS IN FRAME {&FRAME-NAME} = cSubCat.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&UNDEFINE SELF-NAME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK C-Win 


/* ***************************  Main Block  *************************** */

/* Set CURRENT-WINDOW: this will parent dialog-boxes and frames.        */
ASSIGN CURRENT-WINDOW                = {&WINDOW-NAME} 
       THIS-PROCEDURE:CURRENT-WINDOW = {&WINDOW-NAME}.

/* The CLOSE event can be used from inside or outside the procedure to  */
/* terminate it.                                                        */
ON CLOSE OF THIS-PROCEDURE 
   RUN disable_UI.

/* Best default for GUI applications is...                              */
PAUSE 0 BEFORE-HIDE.

/* Now enable the interface and wait for the exit condition.            */
/* (NOTE: handle ERROR and END-KEY so cleanup code will always fire.    */
MAIN-BLOCK:
DO ON ERROR   UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK
   ON END-KEY UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK:
   CLEAR FRAME itemAdd.
   RUN cbCatX.
   RUN enable_UI.
   IF NOT THIS-PROCEDURE:PERSISTENT THEN
     WAIT-FOR CLOSE OF THIS-PROCEDURE.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE cbCatx C-Win 
PROCEDURE cbCatx :
/*------------------------------------------------------------------------------
  Purpose: Offering different options depending on which categories are selected.   
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DO WITH FRAME {&FRAME-NAME}:

    FOR EACH Category NO-LOCK:
        ASSIGN cCat = cCat + Category.CatName + ",".
    END.

    cCat = cCat + "Undefined".

    ASSIGN cbCat:LIST-ITEMS IN FRAME {&FRAME-NAME} = cCat.

END.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE disable_UI C-Win  _DEFAULT-DISABLE
PROCEDURE disable_UI :
/*------------------------------------------------------------------------------
  Purpose:     DISABLE the User Interface
  Parameters:  <none>
  Notes:       Here we clean-up the user-interface by deleting
               dynamic widgets we have created and/or hide 
               frames.  This procedure is usually called when
               we are ready to "clean-up" after running.
------------------------------------------------------------------------------*/
  /* Delete the WINDOW we created */
  IF SESSION:DISPLAY-TYPE = "GUI":U AND VALID-HANDLE(C-Win)
  THEN DELETE WIDGET C-Win.
  IF THIS-PROCEDURE:PERSISTENT THEN DELETE PROCEDURE THIS-PROCEDURE.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE enable_UI C-Win  _DEFAULT-ENABLE
PROCEDURE enable_UI :
/*------------------------------------------------------------------------------
  Purpose:     ENABLE the User Interface
  Parameters:  <none>
  Notes:       Here we display/view/enable the widgets in the
               user-interface.  In addition, OPEN all queries
               associated with each FRAME and BROWSE.
               These statements here are based on the "Other 
               Settings" section of the widget Property Sheets.
------------------------------------------------------------------------------*/

  {&OPEN-QUERY-itemAdd}
  GET FIRST itemAdd.
  DISPLAY cbCat cbSubCat 
      WITH FRAME itemAdd IN WINDOW C-Win.
  IF AVAILABLE shop1337.Item THEN 
    DISPLAY shop1337.Item.ItemName shop1337.Item.Price shop1337.Item.Description 
      WITH FRAME itemAdd IN WINDOW C-Win.
  ENABLE shop1337.Item.ItemName cbCat cbSubCat shop1337.Item.Price 
         shop1337.Item.Description btnAdd BtnDone 
      WITH FRAME itemAdd IN WINDOW C-Win.
  {&OPEN-BROWSERS-IN-QUERY-itemAdd}
  VIEW C-Win.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE FindItemID C-Win 
PROCEDURE FindItemID :
/*------------------------------------------------------------------------------
  Purpose: Runs the corresponding procedure to set ItemID depending on the selected category.    
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DO WITH FRAME {&FRAME-NAME}: 
    CASE cbCat:SCREEN-VALUE:
        WHEN "CPU" THEN RUN ifCPU.
        WHEN "GPU" THEN RUN ifGPU.
        WHEN "PSU" THEN RUN ifPSU.
        WHEN "RAM" THEN RUN ifRAM.
        WHEN "Motherboard" THEN RUN ifMotherboard.
        WHEN "Storage" THEN RUN ifStorage.
        WHEN "Box" THEN RUN ifBox.
    END CASE.
END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ifBox C-Win 
PROCEDURE ifBox :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DO WITH FRAME {&FRAME-NAME}:
    IF cbCat:SCREEN-VALUE = "Box" THEN
        FIND LAST ITEM WHERE ITEM.ItemID >= 7001 AND ITEM.ItemID <= 7999 NO-LOCK NO-ERROR.
        IF AVAILABLE ITEM THEN
            iItemIDCounter = ITEM.ItemID + 1.
        ELSE
            iItemIDCounter = 7001.
END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ifCPU C-Win 
PROCEDURE ifCPU :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DO WITH FRAME {&FRAME-NAME}:
    IF cbCat:SCREEN-VALUE = "CPU" THEN
        FIND LAST ITEM WHERE ITEM.ItemID >= 1001 AND ITEM.ItemID <= 1999 NO-LOCK NO-ERROR.
        IF AVAILABLE ITEM THEN
            iItemIDCounter = ITEM.ItemID + 1.
        ELSE
            iItemIDCounter = 1001.
END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ifGPU C-Win 
PROCEDURE ifGPU :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DO WITH FRAME {&FRAME-NAME}:
    IF cbCat:SCREEN-VALUE = "GPU" THEN
        FIND LAST ITEM WHERE ITEM.ItemID >= 2001 AND ITEM.ItemID <= 2999 NO-LOCK NO-ERROR.
        IF AVAILABLE ITEM THEN
            iItemIDCounter = ITEM.ItemID + 1.
        ELSE
            iItemIDCounter = 2001.
END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ifMotherboard C-Win 
PROCEDURE ifMotherboard :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DO WITH FRAME {&FRAME-NAME}:
    IF cbCat:SCREEN-VALUE = "Motherboard" THEN
        FIND LAST ITEM WHERE ITEM.ItemID >= 5001 AND ITEM.ItemID <= 5999 NO-LOCK NO-ERROR.
        IF AVAILABLE ITEM THEN
            iItemIDCounter = ITEM.ItemID + 1.
        ELSE
            iItemIDCounter = 5001.
END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ifPSU C-Win 
PROCEDURE ifPSU :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DO WITH FRAME {&FRAME-NAME}:
    IF cbCat:SCREEN-VALUE = "PSU" THEN
        FIND LAST ITEM WHERE ITEM.ItemID >= 3001 AND ITEM.ItemID <= 3999 NO-LOCK NO-ERROR.
        IF AVAILABLE ITEM THEN
            iItemIDCounter = ITEM.ItemID + 1.
        ELSE
            iItemIDCounter = 3001.
END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ifRAM C-Win 
PROCEDURE ifRAM :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DO WITH FRAME {&FRAME-NAME}:
    IF cbCat:SCREEN-VALUE = "RAM" THEN
        FIND LAST ITEM WHERE ITEM.ItemID >= 4001 AND ITEM.ItemID <= 4999 NO-LOCK NO-ERROR.
        IF AVAILABLE ITEM THEN
            iItemIDCounter = ITEM.ItemID + 1.
        ELSE
            iItemIDCounter = 4001.
END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ifStorage C-Win 
PROCEDURE ifStorage :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DO WITH FRAME {&FRAME-NAME}:
    IF cbCat:SCREEN-VALUE = "Storage" THEN
        FIND LAST ITEM WHERE ITEM.ItemID >= 6001 AND ITEM.ItemID <= 6999 NO-LOCK NO-ERROR.
        IF AVAILABLE ITEM THEN
            iItemIDCounter = ITEM.ItemID + 1.
        ELSE
            iItemIDCounter = 6001.
END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

